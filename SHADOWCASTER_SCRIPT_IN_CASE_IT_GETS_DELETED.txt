private Vector3 vec2To3(Vector2 inputVector)
{
    return new Vector3(inputVector.x, inputVector.y, 0);
}

private void Awake()
{
    if (m_ApplyToSortingLayers == null)
        m_ApplyToSortingLayers = SetDefaultSortingLayers();

    Bounds bounds = new Bounds(transform.position, Vector3.one);

    Renderer renderer = GetComponent<Renderer>();
    if (renderer != null)
    {
        bounds = renderer.bounds;
    }
    else
    {
        Collider2D collider = GetComponent<Collider2D>();
        if (collider != null)
            if (collider.GetType() == typeof(PolygonCollider2D))
            {
                m_ShapePath = Array.ConvertAll<Vector2, Vector3>(((PolygonCollider2D)collider).GetPath(0), vec2To3);
                m_UseRendererSilhouette = false;
            }
            else
            {
                bounds = collider.bounds;
            }
    }

    Vector3 relOffset = bounds.center - transform.position;

    if (m_ShapePath == null || m_ShapePath.Length == 0)
    {
        m_ShapePath = new Vector3[]
        {
            relOffset + new Vector3(-bounds.extents.x, -bounds.extents.y),
            relOffset + new Vector3(bounds.extents.x, -bounds.extents.y),
            relOffset + new Vector3(bounds.extents.x, bounds.extents.y),
            relOffset + new Vector3(-bounds.extents.x, bounds.extents.y)
        };
    }
}